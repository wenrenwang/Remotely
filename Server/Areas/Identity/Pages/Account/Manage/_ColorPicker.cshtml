@model ColorPickerModel

@{ 
    var pickerId = "p-" + Guid.NewGuid().ToString();
}

<div id="@pickerId">
    <label>Color Sample:</label>
    <div class="color-sample mb-1"></div>

    <label asp-for="Red"></label>
    <input type="range" asp-for="Red" min="0" max="255" class="form-control red-picker" />

    <label asp-for="Green"></label>
    <input type="range" asp-for="Green" min="0" max="255" class="form-control green-picker" />

    <label asp-for="Blue"></label>
    <input type="range" asp-for="Blue" min="0" max="255" class="form-control blue-picker" />
</div>

<style>
    .color-sample {
        width: 50px;
        height: 50px;
        border-radius: 100%;
    }
</style>

<script>
    function setCurrentColor(picker) {
        let red = picker.querySelector(".red-picker").value;
        let green = picker.querySelector(".green-picker").value;
        let blue = picker.querySelector(".blue-picker").value;
        let newColor = `rgb(${red},${green},${blue})`;
        picker.querySelector(".color-sample").style.backgroundColor = newColor;
    }
    window.addEventListener("load", () => {
        var picker = document.querySelector("#" + "@pickerId");

        picker.querySelectorAll("input").forEach(x => {
            x.addEventListener("input", () => {
                setCurrentColor(picker);
            });
        })

        setCurrentColor(picker);
    })
</script>